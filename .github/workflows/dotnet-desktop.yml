name: .NET Core Full Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Build Job
  build_backend:
    runs-on: ubuntu-latest

    env:
      Solution_Name: Backend.sln

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore Dependencies
      run:  dotnet restore 

    - name: Build Solution
      run: dotnet build --configuration Release
      
    - name: Execute unit tests
      run: dotnet test UnitTests/UnitTests.csproj

    - name: Build the Docker image
      run: docker build . --file dockerfile.api --tag thread-of-nine-lives/api
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: bjand49
        password: ${{ secrets.DOCKER_PAT }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
      with:
        images: thread-of-nine-lives/api
        
    - name: Push Docker image
      run: docker push thread-of-nine-lives/api

      runs-on: ubuntu-latest
      needs: [build_backend,build_seeder]
      services:
        mssql:
          image: mcr.microsoft.com/mssql/server:2022-latest
          env:
            ACCEPT_EULA: "Y"
            SA_PASSWORD: "yourStrong(!)Password"
          ports:
            - 1433:1433
          options: >-
            --health-cmd "exit 0"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

      steps: 
        - name: Download Backend Artifact
          uses: actions/download-artifact@v4
          with:
            name: backend-artifact

        - name: Download Seeder Artifact
          uses: actions/download-artifact@v4
          with:
            name: seeder-artifact

        - name: Setup .NET Core
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: 8.0.x
        - name: test
          run : ls

        - name: Run Data Seeder
          run: cd DatabaseSeeder &
            dotnet DatabaseSeeder.dll

        - name: Start Backend in Background
          run: cd ../Backend &
            dotnet Backend.dll &
            sleep 2
        - name: Install Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '20'
            
        - name: Install postwoman npm
          run: npm i -g @hoppscotch/cli

        - name: Test CardEndpoints
          run: hopp test -e cm32vkcrw00dhh7mfs5l34099 cm2vovwgi002jnyzh1ixfcc9c --token ${{secrets.HOPPSCOTCHPAT}}
